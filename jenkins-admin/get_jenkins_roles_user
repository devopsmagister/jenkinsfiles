@NonCPS
def getRolePermissionsJson() {
    import jenkins.model.*
    import com.michelin.cio.hudson.plugins.rolestrategy.*
    import groovy.json.JsonOutput

    def output = []
    def jenkins = Jenkins.getInstance()
    def authStrategy = jenkins.getAuthorizationStrategy()

    if (authStrategy instanceof RoleBasedAuthorizationStrategy) {
        def roleMaps = authStrategy.getRoleMaps()
        roleMaps.each { roleType, roleMap ->
            def roleToSids = roleMap.getGrantedRoles()
            roleToSids.each { role, sidSet ->
                def permissions = role.getPermissions()*.id
                sidSet.each { sid ->
                    if (sid != "anonymous") {
                        output << [
                            scope      : roleType.toString(),
                            role       : role.getName(),
                            permissions: permissions,
                            sid        : sid
                        ]
                    }
                }
            }
        }
        return JsonOutput.prettyPrint(JsonOutput.toJson(output))
    } else {
        error "❌ Role-Based Authorization Strategy not enabled. Found: ${authStrategy.getClass().getName()}"
    }
}

pipeline {
    agent any

    environment {
        JSON_FILE = 'role_permissions.json'
        XLSX_FILE = 'jenkins_roles_report.xlsx'
    }

    options {
        skipDefaultCheckout(true)
    }

    stages {
        stage('Extract Role Permissions') {
            steps {
                script {
                    def jsonStr = getRolePermissionsJson()
                    writeFile file: "${JSON_FILE}", text: jsonStr
                    echo "✅ Permissions exported to ${JSON_FILE} (excluding anonymous)"
                }
            }
        }

        stage('Install Python Dependencies') {
            steps {
                sh '''
                    python3.12 -m venv venv
                    . venv/bin/activate
                    pip install --upgrade pip
                    pip install openpyxl
                '''
            }
        }

        stage('Generate Excel Report') {
            steps {
                writeFile file: 'to_excel.py', text: '''
import json
import openpyxl

with open("role_permissions.json", "r") as f:
    data = json.load(f)

wb = openpyxl.Workbook()
ws = wb.active
ws.title = "Jenkins Roles"

# Headers
ws.append(["Scope", "Role", "SID", "Permissions"])

# Rows
for entry in data:
    scope = entry.get("scope", "")
    role = entry.get("role", "")
    sid = entry.get("sid", "")
    perms = ", ".join(entry.get("permissions", []))
    ws.append([scope, role, sid, perms])

wb.save("jenkins_roles_report.xlsx")
'''
                sh '''
                    . venv/bin/activate
                    python to_excel.py
                '''
            }
        }

        stage('Archive Report') {
            steps {
                archiveArtifacts artifacts: "${XLSX_FILE}", fingerprint: true
            }
        }

        stage('Send Email') {
            steps {
                emailext (
                    subject: "Jenkins Role-Based Access Report",
                    body: '''Hi Team,

Please find attached the latest Jenkins Role-Based Access report.

Regards,
Jenkins
''',
                    to: 'test@test.com',
                    attachmentsPattern: "${XLSX_FILE}",
                    mimeType: 'text/html'
                )
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
